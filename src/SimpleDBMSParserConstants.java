/* Generated By:JavaCC: Do not edit this line. SimpleDBMSParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SimpleDBMSParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EXIT = 6;
  /** RegularExpression Id. */
  int INT = 7;
  /** RegularExpression Id. */
  int CHAR = 8;
  /** RegularExpression Id. */
  int DATE = 9;
  /** RegularExpression Id. */
  int CREATE_TABLE = 10;
  /** RegularExpression Id. */
  int NOT_NULL = 11;
  /** RegularExpression Id. */
  int PRIMARY_KEY = 12;
  /** RegularExpression Id. */
  int FOREIGN_KEY = 13;
  /** RegularExpression Id. */
  int REFERENCES = 14;
  /** RegularExpression Id. */
  int DROP_TABLE = 15;
  /** RegularExpression Id. */
  int DESC = 16;
  /** RegularExpression Id. */
  int SHOW_TABLES = 17;
  /** RegularExpression Id. */
  int SELECT = 18;
  /** RegularExpression Id. */
  int AS = 19;
  /** RegularExpression Id. */
  int FROM = 20;
  /** RegularExpression Id. */
  int WHERE = 21;
  /** RegularExpression Id. */
  int IS = 22;
  /** RegularExpression Id. */
  int NULL = 23;
  /** RegularExpression Id. */
  int AND = 24;
  /** RegularExpression Id. */
  int OR = 25;
  /** RegularExpression Id. */
  int NOT = 26;
  /** RegularExpression Id. */
  int INSERT_INTO = 27;
  /** RegularExpression Id. */
  int VALUES = 28;
  /** RegularExpression Id. */
  int DELETE_FROM = 29;
  /** RegularExpression Id. */
  int CREATE = 30;
  /** RegularExpression Id. */
  int TABLE = 31;
  /** RegularExpression Id. */
  int PRIMARY = 32;
  /** RegularExpression Id. */
  int FOREIGN = 33;
  /** RegularExpression Id. */
  int KEY = 34;
  /** RegularExpression Id. */
  int DROP = 35;
  /** RegularExpression Id. */
  int SHOW = 36;
  /** RegularExpression Id. */
  int TABLES = 37;
  /** RegularExpression Id. */
  int INSERT = 38;
  /** RegularExpression Id. */
  int INTO = 39;
  /** RegularExpression Id. */
  int DELETE = 40;
  /** RegularExpression Id. */
  int SEMICOLON = 41;
  /** RegularExpression Id. */
  int LEFT_PAREN = 42;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 43;
  /** RegularExpression Id. */
  int COMMA = 44;
  /** RegularExpression Id. */
  int UNDERSCORE = 45;
  /** RegularExpression Id. */
  int INT_VALUE = 46;
  /** RegularExpression Id. */
  int SIGN = 47;
  /** RegularExpression Id. */
  int DIGIT = 48;
  /** RegularExpression Id. */
  int LEGAL_IDENTIFIER = 49;
  /** RegularExpression Id. */
  int ALPHABET = 50;
  /** RegularExpression Id. */
  int QUOTE = 51;
  /** RegularExpression Id. */
  int ASTERISK = 52;
  /** RegularExpression Id. */
  int PERIOD = 53;
  /** RegularExpression Id. */
  int COMP_OP = 54;
  /** RegularExpression Id. */
  int NNNN = 55;
  /** RegularExpression Id. */
  int NN = 56;
  /** RegularExpression Id. */
  int DATE_VALUE = 57;
  /** RegularExpression Id. */
  int NON_QUOTE_SPECIAL_CHARACTERS = 58;
  /** RegularExpression Id. */
  int NON_QUOTE_CHARACTER = 59;
  /** RegularExpression Id. */
  int CHAR_STRING = 60;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "\"exit\"",
    "\"int\"",
    "\"char\"",
    "\"date\"",
    "\"create table\"",
    "\"not null\"",
    "\"primary key\"",
    "\"foreign key\"",
    "\"references\"",
    "\"drop table\"",
    "\"desc\"",
    "\"show tables\"",
    "\"select\"",
    "\"as\"",
    "\"from\"",
    "\"where\"",
    "\"is\"",
    "\"null\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"insert into\"",
    "\"values\"",
    "\"delete from\"",
    "\"create\"",
    "\"table\"",
    "\"primary\"",
    "\"foreign\"",
    "\"key\"",
    "\"drop\"",
    "\"show\"",
    "\"tables\"",
    "\"insert\"",
    "\"into\"",
    "\"delete\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"_\"",
    "<INT_VALUE>",
    "<SIGN>",
    "<DIGIT>",
    "<LEGAL_IDENTIFIER>",
    "<ALPHABET>",
    "\"\\\'\"",
    "\"*\"",
    "\".\"",
    "<COMP_OP>",
    "<NNNN>",
    "<NN>",
    "<DATE_VALUE>",
    "<NON_QUOTE_SPECIAL_CHARACTERS>",
    "<NON_QUOTE_CHARACTER>",
    "<CHAR_STRING>",
  };

}
